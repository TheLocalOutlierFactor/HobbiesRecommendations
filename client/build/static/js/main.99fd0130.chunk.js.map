{"version":3,"sources":["components/Header/Header.style.js","components/Header/Header.js","components/Question/Question.style.js","components/Question/Question.js","pages/Result/Result.style.js","pages/Result/Result.js","pages/NotFound/NotFound.js","App.js","index.js"],"names":["useStyles","makeStyles","header","textAlign","fontSize","background","borderRadius","color","marginInline","Header","styles","Styles","className","questionSelectNext","border","height","marginRight","backgroundColor","questionGetResults","questionNumber","fontFamily","margin","fontWeight","questionAsk","form","minHeight","paddingBottom","width","helperText","radio","radioLabel","radioGroup","radioIcon","boxShadow","backgroundImage","outline","outlineOffset","checkedRadioIcon","display","content","Question","prevBtnEnabled","nextBtnEnabled","question","currentQuestionIndex","handleNextQuestion","handlePrevQuestion","handleSelectAnswer","error","currAnswer","getResultsEnabled","handleGetResults","FormControl","formControlStyle","FormLabel","value","RadioGroup","aria-label","name","onChange","Object","keys","answers","map","answerValue","FormControlLabel","toString","control","Radio","disableRipple","checkedIcon","clsx","icon","label","Typography","labelPlacement","FormHelperText","Button","onClick","marginBottom","paddingTop","results","scrollMargin","Results","result","recommendations","recommendation","index","NotFound","App","useState","sessionStorage","getItem","JSON","parse","setAnswers","setCurrentQuestionIndex","selectionError","setSelectionError","currentAnswer","setCurrentAnswer","setHelperText","localStorage","setResult","useQuery","a","axios","get","data","isLoading","mutation","useMutation","sendAnswers","post","history","useHistory","useEffect","setItem","stringify","message","Questions","length","isResultPresent","entries","exact","path","currIndex","e","currAnswers","newAnswers","target","dataToSend","mutate","onError","console","log","push","onSuccess","response","to","queryClient","QueryClient","Index","QueryClientProvider","client","render","document","querySelector"],"mappings":"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","file":"static/js/main.99fd0130.chunk.js","sourcesContent":["import {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        textAlign: 'center',\r\n        fontSize: '22px',\r\n        background: '#fa9e6a',\r\n        borderRadius: 10,\r\n        color: 'white',\r\n        marginInline: '12px',\r\n    },\r\n});\r\n\r\nexport { useStyles as Styles };","import {Styles} from \"./Header.style\";\r\n\r\nconst Header = () => {\r\n    const styles = Styles();\r\n    return (\r\n        <div className={styles.header}>\r\n            Пройдите опрос из 57 вопросов и мы предложим вам хобби и увлечения.<br />\r\n            Шкала 1-5 подразумевает степень вашего согласия с утверждением:<br />\r\n            1 &ndash; полностью не согласен (согласна), 5 &ndash; полностью согласен (согласна).<br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Header };","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    questionSelectNext: {\r\n        background: '#87cf69',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        color: 'white',\r\n        height: 36,\r\n        marginRight: '12px',\r\n        '&:hover': {\r\n            backgroundColor: '#6faf57',\r\n            color: 'white',\r\n        },\r\n    },\r\n    questionGetResults: {\r\n        background: '#9969cf',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        color: 'white',\r\n        height: 36,\r\n        marginRight: '12px',\r\n        '&:hover': {\r\n            backgroundColor: '#8156a8',\r\n            color: 'white',\r\n        },\r\n    },\r\n    questionNumber: {\r\n        fontFamily: \"'Alegreya', serif\",\r\n        fontSize: '28px',\r\n        color: 'black',\r\n        margin: '14px',\r\n        fontWeight: \"Bold\",\r\n        \"&.Mui-focused\": {\r\n            color: 'black',\r\n        },\r\n        \"&.Mui-error\": {\r\n            color: 'black',\r\n        },\r\n    },\r\n    questionAsk: {\r\n        fontFamily: \"'Merriweather', serif\",\r\n        fontSize: '36px',\r\n        color: 'black',\r\n        margin: '14px',\r\n        fontWeight: \"Bold\",\r\n        \"&.Mui-focused\": {\r\n            color: 'black',\r\n        },\r\n        \"&.Mui-error\": {\r\n            color: 'black',\r\n        },\r\n    },\r\n    form: {\r\n        minHeight: '100%',\r\n        paddingBottom: '40px',\r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        width: '95%',\r\n        height: '100%',\r\n    },\r\n    helperText: {\r\n        textAlign: 'center',\r\n    },\r\n    radio: {\r\n        '&:hover': {\r\n            backgroundColor: 'transparent',\r\n        },\r\n    },\r\n    radioLabel: {\r\n        fontFamily: 'Segoe UI',\r\n        fontSize: \"22px\",\r\n    },\r\n    radioGroup: {\r\n        width: 'max-content',\r\n        margin: 'auto',\r\n    },\r\n    radioIcon: {\r\n        borderRadius: '50%',\r\n        width: 22,\r\n        height: 22,\r\n        boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\r\n        backgroundColor: '#f5f8fa',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\r\n        'radio.Mui-focusVisible &': {\r\n            outline: '2px auto rgba(19,124,189,.6)',\r\n            outlineOffset: 2,\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#d8f8c2',\r\n        },\r\n    },\r\n    checkedRadioIcon: {\r\n        backgroundColor: '#47c719',\r\n        backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\r\n        '&:before': {\r\n            display: 'block',\r\n            width: 22,\r\n            height: 22,\r\n            backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\r\n            content: '\"\"',\r\n        },\r\n        'input:hover ~ &': {\r\n            backgroundColor: '#379e15',\r\n        },\r\n    },\r\n});\r\n\r\nexport { useStyles as Styles };","import FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport {Styles} from \"./Question.style\";\r\nimport clsx from 'clsx';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Question = ({prevBtnEnabled,\r\n                   nextBtnEnabled,\r\n                   question,\r\n                   currentQuestionIndex,\r\n                   handleNextQuestion,\r\n                   handlePrevQuestion,\r\n                   handleSelectAnswer,\r\n                   helperText,\r\n                   error,\r\n                   currAnswer,\r\n                   getResultsEnabled,\r\n                   handleGetResults,\r\n                  }) => {\r\n    const styles = Styles();\r\n    return (\r\n        <div className={styles.form}>\r\n            <FormControl className={styles.formControlStyle}\r\n                         error={error}>\r\n                <FormLabel className={styles.questionNumber}>\r\n                    Вопрос №{currentQuestionIndex + 1}\r\n                </FormLabel>\r\n                <FormLabel className={styles.questionAsk}>\r\n                    {question.value}\r\n                </FormLabel>\r\n                <RadioGroup className={styles.radioGroup}\r\n                            aria-label=\"position\"\r\n                            name=\"answers\"\r\n                            value={currAnswer}\r\n                            onChange={handleSelectAnswer}>\r\n                    {Object.keys(question.answers).map(answerValue => {\r\n                        return <FormControlLabel key={answerValue}\r\n                                          value={answerValue.toString()}\r\n                                          control={\r\n                                              <Radio className={styles.radio}\r\n                                                     disableRipple\r\n                                                     color=\"default\"\r\n                                                     checkedIcon={\r\n                                                     <span className={\r\n                                                         clsx(styles.radioIcon,\r\n                                                              styles.checkedRadioIcon)\r\n                                                     } />\r\n                                                     }\r\n                                                     icon={\r\n                                                         <span className={styles.radioIcon} />\r\n                                                     } />\r\n                                          }\r\n                                          label={\r\n                                              <Typography className={styles.radioLabel}>\r\n                                                  {question.answers[answerValue]}\r\n                                              </Typography>\r\n                                          }\r\n                                          labelPlacement=\"end\" />\r\n                    })}\r\n                </RadioGroup>\r\n                <FormHelperText className={styles.helperText}>\r\n                    {helperText}\r\n                </FormHelperText>\r\n            </FormControl>\r\n            <div>\r\n                {prevBtnEnabled &&\r\n                <Button className={styles.questionSelectNext}\r\n                        disableRipple\r\n                        onClick={handlePrevQuestion}>\r\n                    Предыдущий вопрос\r\n                </Button>}\r\n                {nextBtnEnabled &&\r\n                <Button className={styles.questionSelectNext}\r\n                        disableRipple\r\n                        onClick={handleNextQuestion}>\r\n                    Следующий вопрос\r\n                </Button>}\r\n                {getResultsEnabled &&\r\n                <Button className={styles.questionGetResults}\r\n                        disableRipple\r\n                        onClick={handleGetResults}>\r\n                    Посмотреть результат\r\n                </Button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Question };","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        textAlign: 'center',\r\n        fontSize: '32px',\r\n        background: '#fa9e6a',\r\n        borderRadius: 10,\r\n        color: 'white',\r\n        marginInline: '12px',\r\n        height: 'auto',\r\n        margin: 'auto',\r\n        marginBottom: '18px',\r\n        paddingTop: '6px',\r\n        paddingBottom: '6px',\r\n    },\r\n    results: {\r\n        fontSize: '32px',\r\n        fontFamily: \"'Philosopher', sans-serif\",\r\n        textAlign:'center',\r\n        scrollMargin: '12px'\r\n    }\r\n});\r\n\r\nexport { useStyles as Styles };","import {Styles} from \"./Result.style\";\r\n\r\nconst Results = ({result}) => {\r\n    const styles = Styles();\r\n    return (\r\n        <div>\r\n            <div className={styles.header}>Это может вам понравиться:</div>\r\n            <div className={styles.results}>\r\n            {result.recommendations.map((recommendation, index) =>\r\n                {\r\n                    return <div key={index}>{recommendation}</div>\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport { Results };","const NotFound = () => {\r\n    return (\r\n        <div>Страница не найдена...</div>\r\n    )\r\n}\r\n\r\nexport { NotFound };","import React, {useState, useEffect} from 'react';\r\nimport {useQuery, useMutation} from 'react-query';\r\nimport axios from 'axios';\r\nimport {Header} from './components/Header/Header.js';\r\nimport {Question} from './components/Question/Question.js';\r\nimport {Results} from \"./pages/Result/Result.js\";\r\nimport {NotFound} from \"./pages/NotFound/NotFound.js\";\r\nimport {Switch, Route, useHistory, Redirect} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n    const [answers, setAnswers] = useState(\r\n        sessionStorage.getItem('answers') ?\r\n        JSON.parse(sessionStorage.getItem('answers')) : []);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(\r\n        sessionStorage.getItem('currentQuestionIndex') ?\r\n        JSON.parse(sessionStorage.getItem('currentQuestionIndex')) : 0);\r\n    const [selectionError, setSelectionError] = useState(false);\r\n    const [currentAnswer, setCurrentAnswer] = useState('');\r\n    const [helperText, setHelperText] = useState('Выберите ответ');\r\n    const [result, setResult] = useState(localStorage.getItem('results') ?\r\n        JSON.parse(localStorage.getItem('results')) : {});\r\n\r\n    const {isLoading, error, data} = useQuery('fetchQuestions', async () => {\r\n        const { data } = await axios.get(\"/api/questions\");\r\n        return data\r\n    });\r\n\r\n    const mutation = useMutation(sendAnswers =>\r\n        axios.post('/api/result', sendAnswers));\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        sessionStorage.setItem('currentQuestionIndex', JSON.stringify(currentQuestionIndex));\r\n        sessionStorage.setItem('answers', JSON.stringify(answers));\r\n        setCurrentAnswer(answers[currentQuestionIndex] ? answers[currentQuestionIndex] : '');\r\n    }, [answers, currentQuestionIndex]);\r\n\r\n    useEffect(() => {\r\n        setHelperText(currentAnswer ? ' ' : 'Выберите ответ');\r\n    }, [currentAnswer]);\r\n\r\n    const handleNextQuestion = () => {\r\n        if (currentAnswer) {\r\n            setSelectionError(false);\r\n            setCurrentQuestionIndex(currIndex => currIndex + 1);\r\n        } else {\r\n            setSelectionError(true);\r\n        }\r\n    };\r\n\r\n    const handlePrevQuestion = () => {\r\n        setSelectionError(false);\r\n        setCurrentQuestionIndex(currIndex => currIndex - 1);\r\n    };\r\n\r\n    const handleSelectAnswer = e => {\r\n        setAnswers(currAnswers => {\r\n            const newAnswers = [...currAnswers];\r\n            newAnswers[currentQuestionIndex] = e.target.value;\r\n            return newAnswers;\r\n        });\r\n        setHelperText(' ');\r\n    };\r\n\r\n    const handleGetResults = () => {\r\n        if (currentAnswer) {\r\n            setSelectionError(false);\r\n            const dataToSend = {'Answers': answers};\r\n            mutation.mutate(dataToSend, {\r\n                onError: () => {\r\n                    console.log('Что-то пошло не так...');\r\n                    history.push('/');\r\n                },\r\n                onSuccess: response => {\r\n                    setResult(response.data);\r\n                    localStorage.setItem('results', JSON.stringify(response.data));\r\n                    history.push('/results');\r\n                },\r\n            });\r\n        } else {\r\n            setSelectionError(true);\r\n        }\r\n    };\r\n\r\n    if (isLoading) return ''\r\n\r\n    if (error) return 'Произошла ошибка: ' + error.message\r\n\r\n    const nextBtnEnabled = currentQuestionIndex < data.Questions.length - 1;\r\n    const prevBtnEnabled = currentQuestionIndex > 0;\r\n    const getResultsEnabled = currentQuestionIndex === data.Questions.length - 1;\r\n    const isResultPresent = Object.entries(result).length !== 0;\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/'>\r\n                <Header />\r\n                <Question prevBtnEnabled={prevBtnEnabled}\r\n                          nextBtnEnabled={nextBtnEnabled}\r\n                          question={data.Questions[currentQuestionIndex]}\r\n                          currentQuestionIndex={currentQuestionIndex}\r\n                          handleNextQuestion={handleNextQuestion}\r\n                          handlePrevQuestion={handlePrevQuestion}\r\n                          handleSelectAnswer={handleSelectAnswer}\r\n                          helperText={helperText}\r\n                          error={selectionError}\r\n                          currAnswer={currentAnswer}\r\n                          getResultsEnabled={getResultsEnabled}\r\n                          handleGetResults={handleGetResults} />\r\n            </Route>\r\n            <Route path='/results'>\r\n                { isResultPresent ?\r\n                    (<Results result={result}/>)\r\n                    :\r\n                    (<Redirect to='/404' />)\r\n                }\r\n            </Route>\r\n            <Route exact path='/404'>\r\n                <NotFound />\r\n            </Route>\r\n            <Redirect to='/404' />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default App;","import {QueryClient, QueryClientProvider} from \"react-query\";\nimport App from \"./App\";\nimport {render} from \"react-dom\";\nimport React from \"react\";\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\";\nconst queryClient = new QueryClient();\n\nconst Index = () => {\n    return (\n        <QueryClientProvider client={queryClient}>\n        <Router>\n            <App />\n        </Router>\n        </QueryClientProvider>\n    )\n}\n\nrender(<Index />, document.querySelector('#app'));"],"sourceRoot":""}